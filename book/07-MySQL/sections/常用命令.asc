=== 常用命令

==== 创建数据库时指定字符集
[source, bash]
----
CREATE DATABASE db_name DEFAULT CHARACTER SET utf8mb4 DEFAULT COLLATE utf8mb4_unicode_ci;
----

==== 新建或修改密码、开放指定HOST登录

参考::
https://dev.mysql.com/doc/refman/8.0/en/creating-accounts.html[Adding Accounts, Assigning Privileges, and Dropping Accounts]

.MySQL 5.7及以上，开放指定HOST并设置用户名和密码
[source, bash]
----
CREATE USER 'dummy'@'localhost';

CREATE USER 'finley'@'localhost' IDENTIFIED BY 'password';

GRANT ALL ON *.* TO 'finley'@'localhost' WITH GRANT OPTION;
----

.MySQL 5.7及以上，单独开放指定HOST登录
[source, bash]
----
update user set host = '%'  where user ='root';
flush privileges;
----

.MySQL 5.7及以上，修改用户密码
[source, bash]
----
ALTER USER 'root'@'%' IDENTIFIED BY 'geek';
flush privileges;
----

.MySQL 5.7以下
[source, bash]
----
grant all privileges on *.*  to root@"172.17.%.%" identified by "geek";
update user set Grant_priv='Y' where User='root' and Host='172.17.%.%';
flush privileges;
----

==== 本机无密码登录

[source, bash]
mysql_config_editor set --login-path=local --host=localhost --user=root --password

[source, bash]
mysql --login-path=local db_name


==== 查看字符集

.查看数据库字符集1
----
mysql> show variables like 'collation%';
+----------------------+--------------------+
| Variable_name        | Value              |
+----------------------+--------------------+
| collation_connection | utf8mb4_unicode_ci |
| collation_database   | utf8mb4_unicode_ci |
| collation_server     | utf8mb4_unicode_ci |
+----------------------+--------------------+
3 rows in set (0.00 sec)

mysql> show variables like 'character%';
+--------------------------+----------------------------+
| Variable_name            | Value                      |
+--------------------------+----------------------------+
| character_set_client     | utf8mb4                    |
| character_set_connection | utf8mb4                    |
| character_set_database   | utf8mb4                    |
| character_set_filesystem | binary                     |
| character_set_results    | utf8mb4                    |
| character_set_server     | utf8mb4                    |
| character_set_system     | utf8                       |
| character_sets_dir       | /usr/share/mysql/charsets/ |
+--------------------------+----------------------------+
8 rows in set (0.00 sec)
----

.查看数据库字符集2
----
mysql> show create database ghibli;
+----------+----------------------------------------------------------------------------------------------------------------------------------+
| Database | Create Database                                                                                                                  |
+----------+----------------------------------------------------------------------------------------------------------------------------------+
| ghibli   | CREATE DATABASE `ghibli` /*!40100 DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci */ /*!80016 DEFAULT ENCRYPTION='N' */ |
+----------+----------------------------------------------------------------------------------------------------------------------------------+
1 row in set (0.00 sec)
----

.查看表字符集
----
mysql> show create table pre_ucenter_memberfields;
Current database: db_name

+-----------------------------------------------------------------+
| Table                    | Create Table|
+-----------------------------------------------------------------+
| pre_ucenter_memberfields | CREATE TABLE `pre_ucenter_memberfields` (
  `uid` mediumint(8) unsigned NOT NULL DEFAULT '0',
  `blacklist` text NOT NULL,
  PRIMARY KEY (`uid`)
) ENGINE=InnoDB DEFAULT CHARSET=gbk |
+-----------------------------------------------------------------+
1 row in set (0.98 sec)
----


==== 修改表字符集

.修改表字符集
[source, bash]
ALTER TABLE table_name CONVERT TO CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;

.修改数据库字符集
[source, bash]
ALTER DATABASE db_name CHARACTER SET = utf8mb4 COLLATE = utf8mb4_unicode_ci;


==== 备份和还原

[source, bash]
----
mysqldump -uusername -p'password' --add-drop-table db_name > db_name_dump.sql

mysql -uusername -p'password' db_name < db_name_dump.sql
----

==== 临时启用性能调优   

[source, bash]
----
set profiling=on;
show profiles;
show profile for query query_id;
----


==== 查看全局变量

[source, bash]
----
set global query_cache_type=on;

show global variables like '%time%';
----

