=== `commit` 模板

. 设置全局默认编辑器： `git config --global core.editor vim`
. 设置全局 `commit` 模板： `git config --global commit.template ~/.gitmessage.txt`
. 执行 `git commit`  即可使用 `commit` 模板


.gitmessage.txt 文件内容
----
# Type(<scope>): <subject>

# <body>

# <footer>

# ** TYPES **
# feat (new feature)
# fix (bug fix)
# docs (changes to documentation)
# style (formatting, missing semi colons, etc; no code change)
# refactor (refactoring production code)
# perf (improves performance)
# revert (revert commit)
# test (adding missing tests, refactoring tests; no production code change)
# chore (updating grunt tasks etc; no production code change)
#
# ** FOOTERS **
# References #1, #4, and #2.
# Fix #1. note this marks the item as accepted in Sprintly
# Closes #1 and #2. note this marks the item as accepted in Sprintly

# Scope is just the scope of the change. Something like (admin) or (teacher).
# Subject should use impertivite tone and say what you did.
# The body should go into detail about changes made.
# The footer should contain any JIRA (or other tool) issue references or actions.

# e.g.,
# revert: feat(pencil): add 'graphiteWidth' option
# This reverts commit 667ecc1654a317a13331b17617d973392f415f02.
----

