=== 安装配置

==== CentOS7

===== 升级内核以支持 `TCP BBR`
[source, bash]
----
rpm --import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org
yum install -y https://www.elrepo.org/elrepo-release-7.0-4.el7.elrepo.noarch.rpm
yum --enablerepo=elrepo-kernel install -y kernel-ml

lastest_kernel=`grep "menuentry 'CentOS Linux" /boot/grub2/grub.cfg|awk -F "'" '{print $2}'|head -n 1`
grub2-set-default "$lastest_kernel"

rm -f /boot/grub2/grub.cfg.bak
cp /boot/grub2/grub.cfg /boot/grub2/grub.cfg.bak
grub2-mkconfig -o /boot/grub2/grub.cfg
----

然后，重启系统。

===== 开启 `TCP BBR` 塞控制算法

. 开机后执行 `uname -r` 确认内核版本 >= 4.9
. 加载内核模块

[source, bash]
----
modprobe tcp_bbr
echo "tcp_bbr" | tee --append /etc/modules-load.d/modules.conf
----

[start=3]
. 确认加载

----
# lsmod | grep bbr
tcp_bbr                20480  31
----

[start=4]
. 设置网络参数

[source, bash]
----
echo "net.core.default_qdisc=fq" >> /etc/sysctl.conf
echo "net.ipv4.tcp_congestion_control=bbr" >> /etc/sysctl.conf
sysctl -p
----

[start=5]

查看网络参数。如果结果都有 bbr，则证明你的内核已开启 BBR

----
# sysctl net.ipv4.tcp_available_congestion_control
net.ipv4.tcp_available_congestion_control = reno cubic bbr

# sysctl net.ipv4.tcp_congestion_control
net.ipv4.tcp_congestion_control = bbr
----

==== 安装 `Shadowsocks`

. 更新OpenSSL证书 `/etc/pki/tls/certs/ca-bundle.crt`

[source, bash]
yum update -y openssl

[start=2]
. 安装依赖

[source, bash]
----
yum install -y python-pip python python-setuptools python-devel libffi-devel openssl-devel gcc
pip install --upgrade pip
pip install --upgrade ordereddict backport-ipaddress setuptools urllib3
pip install pyopenssl ndg-httpsclient pyasn
----

[start=3]
. 安装 `Shadowsocks`

[source, bash]
pip install shadowsocks

==== 配置 `Shadowsocks`

. 生成配置文件

[source, bash]
----
cat << EOF > /etc/shadowsocks.json
{
    "server":"0.0.0.0",
    "server_port":端口,
    "password":"随机密码",
    "timeout":300,
    "method":"aes-256-cfb",
    "fast_open":false,
    "workers":3
}
EOF
----

[start=2]
. 生成service文件

[source, bash]
----
cat <<EOF > /usr/lib/systemd/system/shadowsocks.service
[Unit]
Description=Shadowsocks Service
After=network.target

[Service]
Type=simple
User=nobody
PIDFile=/tmp/shadowsocks.pid
ExecStart=/usr/bin/ssserver -c /etc/shadowsocks.json --log-file /var/log/shadowsocks.log --pid-file /tmp/shadowsocks.pid -d start

[Install]
WantedBy=multi-user.target
EOF
----

[start=3]
. 设置文件权限

[source, bash]
----
touch /var/log/shadowsocks.log
chown nobody /var/log/shadowsocks.log
----

[start=4]
. 开机启动

[source, bash]
----
systemctl enable shadowsocks
systemctl start shadowsocks
systemctl status shadowsocks
----

[start=5]
. 增加 firewalld 防火墙设置

[source, bash]
----
firewall-cmd --zone=public --add-port=端口/tcp --permanent
firewall-cmd --reload
----

[start=6]
. 确认 firewalld 防火墙设置

[source, bash]
firewall-cmd --list-all


===== CentOS7 一键安装脚本

[source, bash]
----
#!/bin/sh

mkdir ~/.ssh

echo 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDLGJVJI1Cqr59VH1NVQgPs08n7e/HRc2Q8AUpOWGoJpVzIgjO+ipjqwnxh3eiBd806eXIIa5OFwRm0fYfMFxBOdo3l5qGtBe82PwTotdtpcacP5Dkrn+HZ1kG+cf0BNSF5oXbTCTrqY12/T8h4035BXyRw7+MuVPiCUhydYs3RgsODA47ZR3owgjvPsayUd5MrD8gidGqv1zdyW9nQXnXB7m9Sn9Mg8rk6qBxQUbtMN9ez0BFrUGhXCkW562zhJjP5j4RLVfvL2N1bWT9EoFTCjk55pv58j+PTNEGUmu8PrU8mtgf6zQO871whTD8/H6brzaMwuB5Rd5OYkVir0BXj fifilyu@archlinux' >> ~/.ssh/authorized_keys

chmod 600 ~/.ssh/authorized_keys

yum install -y epel-release

yum install -y pwgen vim
ss_server_port=8080

# SS密码
ss_pwd=`pwgen -n 20|head -n 1`
echo "SS密码：$ss_pwd"

# 1. 第一阶段，安装最新版内核以支持tcp_bbr

rpm --import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org
yum install -y https://www.elrepo.org/elrepo-release-7.0-4.el7.elrepo.noarch.rpm
yum --enablerepo=elrepo-kernel install -y kernel-ml

lastest_kernel=`grep "menuentry 'CentOS Linux" /boot/grub2/grub.cfg|awk -F "'" '{print $2}'|head -n 1`

grub2-set-default "$lastest_kernel"

rm -f /boot/grub2/grub.cfg.bak
cp /boot/grub2/grub.cfg /boot/grub2/grub.cfg.bak
grub2-mkconfig -o /boot/grub2/grub.cfg

#reboot

# 2. 第二阶段，设置并启用tcp_bbr模块及其参数
# 开机后 uname -r 看看是不是内核 >= 4.9。
uname -r

# 加载内核模块
modprobe tcp_bbr
echo "tcp_bbr" | tee --append /etc/modules-load.d/modules.conf
# 确认加载
lsmod | grep bbr

# 设置网络参数
echo "net.core.default_qdisc=fq" >> /etc/sysctl.conf
echo "net.ipv4.tcp_congestion_control=bbr" >> /etc/sysctl.conf
# 生效配置
sysctl -p

# 检验参数。如果结果都有 bbr，则证明你的内核已开启 BBR。
sysctl net.ipv4.tcp_available_congestion_control
sysctl net.ipv4.tcp_congestion_control

# 3. 第三阶段，安装ss服务

# 更新OpenSSL证书 /etc/pki/tls/certs/ca-bundle.crt
yum update -y openssl

# 安装ss依赖
yum install -y python-pip python python-setuptools python-devel libffi-devel openssl-devel gcc
pip install --upgrade pip
pip install --upgrade ordereddict backport-ipaddress setuptools urllib3
pip install pyopenssl ndg-httpsclient pyasn
pip install shadowsocks

# 配置文件
cat << EOF > /etc/shadowsocks.json
{
    "server":"0.0.0.0",
    "server_port":$ss_server_port,
    "password":"$ss_pwd",
    "timeout":300,
    "method":"aes-256-cfb",
    "fast_open":false,
    "workers":3
}
EOF

# 服务文件
cat <<EOF > /usr/lib/systemd/system/shadowsocks.service
[Unit]
Description=Shadowsocks Service
After=network.target

[Service]
Type=simple
User=nobody
PIDFile=/tmp/shadowsocks.pid
ExecStart=/usr/bin/ssserver -c /etc/shadowsocks.json --log-file /var/log/shadowsocks.log --pid-file /tmp/shadowsocks.pid -d start

[Install]
WantedBy=multi-user.target
EOF

# 设置文件权限
touch /var/log/shadowsocks.log
chown nobody /var/log/shadowsocks.log

# 设置开机启动
systemctl enable shadowsocks
systemctl start shadowsocks
systemctl status shadowsocks

# （可选）增加 firewalld 防火墙设置
firewall-cmd --zone=public --add-port=$ss_server_port/tcp --permanent
firewall-cmd --reload

# 查看确认
firewall-cmd --list-all

# 最后，重启系统生效。
----

