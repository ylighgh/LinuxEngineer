=== 常用命令

==== 键（key）

[source, bash]
----
set name geek

get name

del name

exists name

# 为给定 key 设置过期时间，以秒计
expire name

# 查找所有符合给定模式( pattern)的 key 
keys rts:*
----

==== 字符串(String)

[source, bash]
----
# 同时设置一个或多个 key-value 对

mset key1 value1 [key2 value2]

# 获取所有(一个或多个)给定 key 的值
mget key1 [key2]

# 将 key 中储存的数字值增一
incr key
# 将 key 中储存的数字值减一
decr key

# 将 key 所储存的值加上给定的增量值（increment）
incrby key increment
# key 所储存的值减去给定的减量值（decrement）
decrby key decrement
----

==== 列表(List)

[source, bash]
----
# 将一个或多个值插入到列表头部
lpush key_list value1 value2
lpush key_list value3

# 获取列表长度
llen key_list


LRANGE runoobkey 0 10

# 移出并获取列表的第一个元素
lpop key_list
----

==== 集合(Set)

Redis 的 Set 是 String 类型的无序集合。集合成员是唯一的，这就意味着集合中不能出现重复的数据。

Redis 中集合是通过哈希表实现的，所以添加，删除，查找的复杂度都是 O(1)。

[source, bash]
----
# 向集合添加一个或多个成员
sadd key_set  value1

# 获取集合的成员数
scard key

# 返回集合中的所有成员
smembers key
----

==== 有序集合(sorted set)

Redis 有序集合和集合一样也是string类型元素的集合,且不允许重复的成员。

[source, bash]
----

----

==== 哈希表（Hash）

===== 增加字段或设置字段

向哈希表中增加字段或设置字段值：

[source, bash]
hset area_info name "四川"

向哈希表中增加多个字段或设置多个字段值：

[source, bash]
hmset area_info name "四川" level 2

===== 获取字段

获取哈希表中指定键的单个字段和值：

[source, bash]
hget area_info name

获取所有给定字段的值：

[source, bash]
hmget area_info name level

获取哈希表中指定键的所有字段和值：

[source, bash]
hgetall area_info

===== 字段是否存在

查看哈希表的指定字段是否存在：

[source, bash]
hexists area_info name

===== 删除字段

删除一个或多个哈希表字段：

[source, bash]
hdel area_info name level

==== 删除键

删除一个或多个键：

[source, bash]
del area_info_a area_info_b


删除模糊匹配的键：

[source, bash]
redis-cli --scan --pattern users:* | xargs redis-cli unlink

